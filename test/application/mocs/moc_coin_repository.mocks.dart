// Mocks generated by Mockito 5.4.6 from annotations
// in crypto_management_task/test/application/mocs/moc_coin_repository.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:crypto_management_task/application/dtos/toggle_favorite_coin_dto.dart'
    as _i6;
import 'package:crypto_management_task/domain/entities/coin.dart' as _i4;
import 'package:crypto_management_task/domain/entities/favorite_coin.dart'
    as _i5;
import 'package:crypto_management_task/domain/repositories/coin_ropository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CoinRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoinRepository extends _i1.Mock implements _i2.CoinRepository {
  MockCoinRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Coin>> getAllCoins() =>
      (super.noSuchMethod(
            Invocation.method(#getAllCoins, []),
            returnValue: _i3.Future<List<_i4.Coin>>.value(<_i4.Coin>[]),
          )
          as _i3.Future<List<_i4.Coin>>);

  @override
  _i3.Future<List<_i5.FavoriteCoin>> getAllFavouriteCoins() =>
      (super.noSuchMethod(
            Invocation.method(#getAllFavouriteCoins, []),
            returnValue: _i3.Future<List<_i5.FavoriteCoin>>.value(
              <_i5.FavoriteCoin>[],
            ),
          )
          as _i3.Future<List<_i5.FavoriteCoin>>);

  @override
  _i3.Future<void> toggleFavorite({
    required _i6.ToggleFavoriteCoinDto? toggleFaveCoinDto,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#toggleFavorite, [], {
              #toggleFaveCoinDto: toggleFaveCoinDto,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
