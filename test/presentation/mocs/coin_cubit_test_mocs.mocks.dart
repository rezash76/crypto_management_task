// Mocks generated by Mockito 5.4.6 from annotations
// in crypto_management_task/test/presentation/mocs/coin_cubit_test_mocs.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:crypto_management_task/application/dtos/dto.dart' as _i6;
import 'package:crypto_management_task/application/dtos/toggle_favorite_coin_dto.dart'
    as _i8;
import 'package:crypto_management_task/application/transactions/get_all_coins_transaction.dart'
    as _i3;
import 'package:crypto_management_task/application/transactions/toggle_favorite_coin_transaction.dart'
    as _i7;
import 'package:crypto_management_task/domain/entities/coin.dart' as _i5;
import 'package:crypto_management_task/domain/repositories/coin_ropository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCoinRepository_0 extends _i1.SmartFake
    implements _i2.CoinRepository {
  _FakeCoinRepository_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GetAllCoinsTransaction].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllCoinsTransaction extends _i1.Mock
    implements _i3.GetAllCoinsTransaction {
  MockGetAllCoinsTransaction() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CoinRepository get coinRepository =>
      (super.noSuchMethod(
            Invocation.getter(#coinRepository),
            returnValue: _FakeCoinRepository_0(
              this,
              Invocation.getter(#coinRepository),
            ),
          )
          as _i2.CoinRepository);

  @override
  _i4.Future<List<_i5.Coin>> call(_i6.NoDto? request) =>
      (super.noSuchMethod(
            Invocation.method(#call, [request]),
            returnValue: _i4.Future<List<_i5.Coin>>.value(<_i5.Coin>[]),
          )
          as _i4.Future<List<_i5.Coin>>);
}

/// A class which mocks [ToggleFavoriteCoinTransaction].
///
/// See the documentation for Mockito's code generation for more information.
class MockToggleFavoriteCoinTransaction extends _i1.Mock
    implements _i7.ToggleFavoriteCoinTransaction {
  MockToggleFavoriteCoinTransaction() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CoinRepository get coinRepository =>
      (super.noSuchMethod(
            Invocation.getter(#coinRepository),
            returnValue: _FakeCoinRepository_0(
              this,
              Invocation.getter(#coinRepository),
            ),
          )
          as _i2.CoinRepository);

  @override
  _i4.Future<void> call(_i8.ToggleFavoriteCoinDto? request) =>
      (super.noSuchMethod(
            Invocation.method(#call, [request]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
